<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Syndred - A Syntax-Driven Editor for Lexical Resources</title>
                <author>
                    <persName>
                        <surname>Mondaca</surname>
                        <forename>Francisco</forename>
                    </persName>
                    <affiliation>Universität zu Köln, Deutschland</affiliation>
                    <email>f.mondaca@uni-koeln.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Rolshoven</surname>
                        <forename>Jürgen</forename>
                    </persName>
                    <affiliation>Universität zu Köln, Deutschland</affiliation>
                    <email>rols@spinfo.uni-koeln.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Schildkamp</surname>
                        <forename>Philip</forename>
                    </persName>
                    <affiliation>Universität zu Köln, Deutschland</affiliation>
                    <email>philip.schildkamp@uni-koeln.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Vogt</surname>
                        <forename>Andreas</forename>
                    </persName>
                    <affiliation>Universität zu Köln, Deutschland</affiliation>
                    <email>vogt.andreas@uni-koeln.de</email>
                </author>
            </titleStmt>
            <editionStmt>
                <edition>
                    <date>2017-09-25T15:07:00Z</date>
                </edition>
            </editionStmt>
            <publicationStmt>
                <publisher>Prof. Dr. Georg Vogeler</publisher>
                <address>
                    <addrLine>UniversitÃ¤t Graz</addrLine>
                    <addrLine>Zentrum fÃ¼r Informationsmodellierung - Austrian Centre for Digital Humanities</addrLine>
                    <addrLine>ElisabethstraÃ&#x9f;e 59/III</addrLine>
                    <addrLine>8010 Graz</addrLine>
                </address>
            </publicationStmt>
            <sourceDesc>
                <p>Converted from a Word document </p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <appInfo>
                <application>
                    <label>DHConvalidator</label>
                </application>
            </appInfo>
        </encodingDesc>
        <profileDesc>
            <textClass>
                <keywords>
                    <term>Paper</term>
                </keywords>
                <keywords>
                    <term>Poster</term>
                </keywords>
                <keywords>
                    <term>Syntax</term>
                    <term>Editor</term>
                    <term>Auszeichnung</term>
                    <term>Parser</term>
                </keywords>
                <keywords>
                    <term>Strukturanalyse</term>
                    <term>Webentwicklung</term>
                    <term>Sprache</term>
                    <term>Software</term>
                </keywords>
            </textClass>
        </profileDesc>
    </teiHeader>
    <text>
        <body>
            <p>Kontinuierlich steigt die Menge der erzeugten und prozessierten Information und damit der Bedarf an technologisch assistierter bishin zu autonomer Datenverarbeitung. Textuell repräsentierte Inhalte mittels strukturgebender Methoden aufzubereiten ist meist aufwendiger als deren Erzeugung, insofern gewinnt automatische Textprozessierung zunehmend an Bedeutung (Bernstein et al.: 2016).</p>
            <p> </p>
            <p>Mithilfe der formalen Grammatiken RBNF (Rich Backus-Naur Form)
                <note>
                    <p> RBNF ist eine EBNF (Extended Backus-Naus Form) Erweiterung um Rich-Text Auszeichnungen.</p>
                </note> und ABNF (Augmented Backus-Naus Form) können Produktionssysteme im Sinne domänenspezifischer, formaler Sprachen (engl. Domain-Specific Languages) modelliert und auf textuelle Daten angewandt werden: Syndred
                <note>
                    <p>
                        <hi>https://github.com/spinfo/syndred</hi>
                    </p>
                </note> nutzt als Parser konkretisierte Grammatiken zur Abbildung von Texten auf Strukturbäume (engl. Parse Trees), die in vielfältiger Form (z. B. als TEI-Dokumente) persistiert, mittels Treewalkern (Parr 2013: 17ff) für weitere Prozessierung transformiert oder beispielhaft zur Überprüfung formaler Korrektheit unter Berücksichtigung von Merkmalen wie bspw. Schriftgröße, -stil und -farbe eingesetzt werden.
            </p>
            <p> </p>
            <p>Wegweisend für die Entwicklung des hier beschriebenen Systems sind die Arbeiten von Wirth und Gutknecht (Gutknecht 1985 bzw. Wirth / Gutknecht 1992: 78ff). Entgegen der Funktionsweise eines Compilers jedoch, der die Analyse des zu übersetzenden Programms meist direkt in Programmcode vornimmt, definiert Syndred textuelle Strukturen anhand domänenspezifischer Grammatiken und bildet sie auf Syntaxgraphen ab.</p>
            <p> </p>
            <p>Der syntaxkontrollierte Editor (engl. Syntax-Driven Editor, kurz: Syndred) soll als flexibles Werkzeug in unterschiedlichsten Projekten (z. B. Lexikoneditoren und denzentraler Korrektur) dienen, kollaboratives Arbeiten durch effiziente formale Kontrolle unterstützen und damit die allgemeine Produktivität durch die Erstellung domänenspezifischer Sprachen erhöhen (Fowler 2011: xxi).</p>
            <p> </p>
            <p>Syndred wartet mit einem Split-View Design auf, welches einerseits das Erstellen und Bearbeiten von Grammatiken und andererseits syntaxkontrolliertes Editieren textueller Inhalte in direkten, visueller Bezug zueinander bringt. Kernkompetenzen der Benutzerschnittstelle sind die Herleitungen von Grammatiken aus textuellen Bestandsdaten oder Rückmeldungen formaler Produktionsregeln zu textuellen Inhalten.</p>
            <p> </p>
            <p>Dezentrales Arbeiten erfordert eine netzwerkbasierte Architektur, idealerweise eine Web-Applikation mit clientseitigem Editor und serverseitigem Parser; Syndred nutzt das auf ReactJS
                <note>
                    <p>
                        <hi>https://facebook.github.io/react</hi>
                    </p>
                </note> basierende Editor-Framework DraftJS
                <note>
                    <p>
                        <hi>https://draftjs.org</hi>
                    </p>
                </note> und kommuniziert im JSON-Format über WebSockets mit einer zentralen, auf Basis des Spring-Frameworks
                <note>
                    <p>
                        <hi>https://projects.spring.io/spring-framework</hi>
                    </p>
                </note> implementierten Java-Applikation. Neben dem Vorteil der Plattformunabhängigkeit ermöglichen die eingesetzten Web-Technologien die zentralisierung der Hardwareleistung wie auch des Speicherbedarfs und sichern gegen Datenverlust ab. Auch garantiert die Bidirektionalität der Client-Server-Verbindung die Kohärenz und Persistenz der kollaborativen Instanzen. Zeitnahe Verfügbarkeit aller für die kollaborative Arbeit mit Syndred notwendigen Ressourcen wird durch einen serverseitigen Cached Thread Pool sichergestellt; aktiven Instanzen wird bei Bedarf ein Parser-Threads zur Verfügung gestellt, der nach Verwendung beendet wird.
            </p>
            <p> </p>
            <p>Syndred ist somit ein Werkzeug zur intuitiven Entwicklung domänenspezifische Sprachen und Überprüfung textueller Inhalte anhand dieser formalen Grammatiken, realisiert als kollaborative Web- Applikation; zusammengenommen ein Meilenstein in der Entwicklung dieser Art von Programmiersprachen.</p>
        </body>
        <back>
            <div>
                <listBibl>
                    <head>Bibliographie</head>
                    <bibl>
                        <hi>Bernstein, Abraham / Hendler, James / Noy, Natalya </hi>(2016): “A New Look at the Semantic Web.” in: 
                        <hi>Communications of the ACM</hi>. 59:9. 35-37.
                    </bibl>
                    <bibl>
                        <hi>Fowler, Martin</hi> (2011): 
                        <hi>Domain-Specific Languages</hi>. Addison-Wesley: Upper Saddle River, New Jersey.
                    </bibl>
                    <bibl>
                        <hi>Gutknecht, Jürg</hi> (1985): “Concepts of the Text Editor Lara.” in: 
                        <hi>Communications of the ACM</hi>. 28:9. 942-960.
                    </bibl>
                    <bibl>
                        <hi>Parr, Terence</hi> (2013):  
                        <hi>The Definitive ANTLR 4 Reference</hi>. Pragmatic Bookshelf: Dallas Texas.
                    </bibl>
                    <bibl>
                        <hi>Wirth, Niklaus</hi> (1986
                        <hi>4</hi>): 
                        <hi>Compilerbau</hi>. Teubner: Stuttgart.
                    </bibl>
                    <bibl>
                        <hi>Wirth, Niklaus</hi> (2000
                        <hi>5</hi>): 
                        <hi>Algorithmen und Datenstrukturen</hi>. Teubner: Stuttgart.
                    </bibl>
                    <bibl>
                        <hi>Wirth, Niklaus / Gutknecht, Jürg</hi> (1992):  
                        <hi>Project Oberon: Design of an Operating System and Compiler</hi>. Addison-Wesley Longman: Amsterdam. 
                    </bibl>
                </listBibl>
            </div>
        </back>
    </text>
</TEI>
